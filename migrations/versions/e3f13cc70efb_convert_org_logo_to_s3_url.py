"""Convert Org Logo to s3 url

Revision ID: e3f13cc70efb
Revises: d7715852ebcc
Create Date: 2018-04-17 13:06:08.579114

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import base64
import json
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
import boto3
import uuid
import os

# revision identifiers, used by Alembic.
revision = 'e3f13cc70efb'
down_revision = 'd7715852ebcc'
branch_labels = None
depends_on = None

Session = sessionmaker()

Base = declarative_base()

class Organization(Base):
    __tablename__ = 'organization'

    id = sa.Column(sa.Integer, primary_key=True)
    name = sa.Column(sa.String())
    logo = sa.Column(sa.String())
    logo_file_name = sa.Column(sa.String())
    logo_binary = sa.Column(sa.LargeBinary())
    logo_file_type = sa.Column(sa.String())

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index('area_org_id_idx', table_name='area')
    # op.drop_index('evaluation_org_id_idx', table_name='evaluation')
    bind = op.get_bind()
    session = Session(bind=bind)
    s3 = boto3.client('s3', 
    aws_access_key_id='AKIAJVEMVB2ZUIKSMGBA', 
    aws_secret_access_key='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'
    )
    for org in session.query(Organization):
        if org.logo_binary is not None:
            filename = str(uuid.uuid1()) + '-' + org.logo_file_name
            pic_binary = org.logo_binary
            file_extension = org.logo_file_type.split('/')[1].split(';')[0]
            tmp_file_name = 'tmp-img.' + file_extension
            with open(tmp_file_name, 'wb') as pic_blob:
                pic_blob.write(pic_binary)
            with open(tmp_file_name, 'rb') as pic_blob:
                s3.upload_fileobj(ExtraArgs={'ACL': 'public-read'}, Fileobj=pic_blob, Bucket='evaluation-photos', Key=filename)
                file_url = 'https://s3.amazonaws.com/evaluation-photos/'+filename
                logo = {'file': {'name': filename}, 'fileURL': file_url}
                org.logo = json.dumps(logo)
            try:
                os.remove(tmp_file_name)
            except OSError:
                pass
    session.commit()
    op.drop_column('organization', 'logo_binary')
    op.drop_column('organization', 'logo_file_type')
    op.drop_column('organization', 'logo_file_name')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('organization', sa.Column('logo_file_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('organization', sa.Column('logo_file_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('organization', sa.Column('logo_binary', postgresql.BYTEA(), autoincrement=False, nullable=True))
    # op.create_index('evaluation_org_id_idx', 'evaluation', ['org_id'], unique=False)
    # op.create_index('area_org_id_idx', 'area', ['org_id'], unique=False)
    # ### end Alembic commands ###
