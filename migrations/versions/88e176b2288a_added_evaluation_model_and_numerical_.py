"""Added Evaluation model and numerical sale price field on Land Data.

Revision ID: 88e176b2288a
Revises: cedf1dfc58f6
Create Date: 2018-01-05 15:08:32.344335

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from re import sub

# revision identifiers, used by Alembic.
revision = '88e176b2288a'
down_revision = 'cedf1dfc58f6'
branch_labels = None
depends_on = None


Session = sessionmaker()

Base = declarative_base()


class LandData(Base):
    __tablename__ = 'land_data'

    id = sa.Column(sa.Integer, primary_key=True)
    sale_price = sa.Column(sa.String)
    sale_price_num = sa.Column(sa.Float)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('property_rating',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('road_frontage', sa.Integer(), nullable=True),
    # sa.Column('access_frontage_easement', sa.Integer(), nullable=True),
    # sa.Column('access_ingress_egress_quality', sa.Integer(), nullable=True),
    # sa.Column('contiguous_parcels', sa.Integer(), nullable=True),
    # sa.Column('topography', sa.Integer(), nullable=True),
    # sa.Column('soils', sa.Integer(), nullable=True),
    # sa.Column('drainage', sa.Integer(), nullable=True),
    # sa.Column('irrigation', sa.Integer(), nullable=True),
    # sa.Column('rivers_creeks_ponds', sa.Integer(), nullable=True),
    # sa.Column('marketable_timber', sa.Integer(), nullable=True),
    # sa.Column('tillable', sa.Float(), nullable=True),
    # sa.Column('non_tillable', sa.Float(), nullable=True),
    # sa.Column('blended_result', sa.Float(), nullable=True),
    # sa.Column('total_subject_score', sa.Integer(), nullable=True),
    # sa.Column('percentage_above_below', sa.Float(), nullable=True),
    # sa.Column('reconciled_overall_rating', sa.String(), nullable=True),
    # sa.Column('createdAt', sa.DateTime(), nullable=False),
    # sa.Column('updatedAt', sa.DateTime(), nullable=False),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('statistical_parameters',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('acreage_min', sa.Float(), nullable=True),
    # sa.Column('acreage_max', sa.Float(), nullable=True),
    # sa.Column('date_of_sale_min', sa.Float(), nullable=True),
    # sa.Column('date_of_sale_max', sa.Float(), nullable=True),
    # sa.Column('outlier_percentage_exclusion', sa.Float(), nullable=True),
    # sa.Column('createdAt', sa.DateTime(), nullable=False),
    # sa.Column('updatedAt', sa.DateTime(), nullable=False),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('evaluation',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('market_area_type', sa.String(), nullable=True),
    # sa.Column('market_area_id', sa.Integer(), nullable=True),
    # sa.Column('market_area_county_id', sa.Integer(), nullable=True),
    # sa.Column('current_listing', sa.Boolean(), nullable=True),
    # sa.Column('property_sold_last_three_years', sa.Boolean(), nullable=True),
    # sa.Column('sale_price_string', sa.String(), nullable=True),
    # sa.Column('sale_price', sa.Integer(), nullable=True),
    # sa.Column('date_sold', sa.DateTime(), nullable=True),
    # sa.Column('current_use', sa.String(), nullable=True),
    # sa.Column('highest_and_best_use', sa.String(), nullable=True),
    # sa.Column('marketing_exposure_time', sa.String(), nullable=True),
    # sa.Column('land_assessment_tax_assessor', sa.String(), nullable=True),
    # sa.Column('building_assessment_tax_assessor', sa.String(), nullable=True),
    # sa.Column('owner', sa.String(), nullable=True),
    # sa.Column('property_address_id', sa.Integer(), nullable=True),
    # sa.Column('map_parcel_number', sa.String(), nullable=True),
    # sa.Column('legal_physical_access', sa.Boolean(), nullable=True),
    # sa.Column('zoning', sa.String(), nullable=True),
    # sa.Column('utilities', sa.String(), nullable=True),
    # sa.Column('property_rights', sa.String(), nullable=True),
    # sa.Column('property_type', sa.String(), nullable=True),
    # sa.Column('tillable', sa.Float(), nullable=True),
    # sa.Column('non_tillable', sa.Float(), nullable=True),
    # sa.Column('acres', sa.Float(), nullable=True),
    # sa.Column('evaluator', sa.String(), nullable=True),
    # sa.Column('date_of_inspection', sa.DateTime(), nullable=True),
    # sa.Column('property_rating_id', sa.Integer(), nullable=True),
    # sa.Column('statistical_parameters_id', sa.Integer(), nullable=True),
    # sa.Column('max', sa.Float(), nullable=True),
    # sa.Column('mod_max', sa.Float(), nullable=True),
    # sa.Column('mod_min_max', sa.Float(), nullable=True),
    # sa.Column('min', sa.Float(), nullable=True),
    # sa.Column('mod_min', sa.Float(), nullable=True),
    # sa.Column('stnd_deviation', sa.Float(), nullable=True),
    # sa.Column('median', sa.Float(), nullable=True),
    # sa.Column('sqrt_data_count', sa.Float(), nullable=True),
    # sa.Column('stnd_error', sa.Float(), nullable=True),
    # sa.Column('total_data_points_property', sa.Integer(), nullable=True),
    # sa.Column('num_properties_before_cal', sa.Integer(), nullable=True),
    # sa.Column('average', sa.Float(), nullable=True),
    # sa.Column('multiplier', sa.Float(), nullable=True),
    # sa.Column('value_unit_concluded', sa.Float(), nullable=True),
    # sa.Column('reconciled_per_unit', sa.Float(), nullable=True),
    # sa.Column('org_id', sa.Integer(), nullable=True),
    # sa.Column('createdAt', sa.DateTime(), nullable=False),
    # sa.Column('updatedAt', sa.DateTime(), nullable=False),
    # sa.ForeignKeyConstraint(['market_area_county_id'], ['county.id'], ),
    # sa.ForeignKeyConstraint(['market_area_id'], ['area.id'], ),
    # sa.ForeignKeyConstraint(['org_id'], ['organization.id'], ),
    # sa.ForeignKeyConstraint(['property_address_id'], ['address.id'], ),
    # sa.ForeignKeyConstraint(['property_rating_id'], ['property_rating.id'], ),
    # sa.ForeignKeyConstraint(['statistical_parameters_id'], ['statistical_parameters.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.add_column('land_data', sa.Column('sale_price_num', sa.Float(), nullable=True))
    # bind = op.get_bind()
    # session = Session(bind=bind)
    # for ld in session.query(LandData):
    #     ld.sale_price_num = float(sub(r'[^\d.]', '', ld.sale_price))
    # session.commit()
    pass
    # Data Migration on Land Data. I am not gonna drop the Sale Price string but I will insert the float into it.

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('land_data', 'sale_price_num')
    op.drop_table('evaluation')
    op.drop_table('statistical_parameters')
    op.drop_table('property_rating')
    # ### end Alembic commands ###
